{"version":3,"file":"static/js/380.b4cf5380.chunk.js","mappings":"uQAAA,IAAMA,EAAM,mCACNC,EAAU,+BAEHC,EAAmB,WAC9B,OAAOC,MAAK,UAAKF,EAAL,uCAA4CD,GACzD,EAEYI,EAAc,SAACC,GAC3B,OAAOF,MAAK,UAAMF,EAAN,kBAAwBI,EAAxB,oBAA4CL,GACxD,EAEYM,EAAkB,SAACD,GAC5B,OAAOF,MAAM,GAAD,OAAKF,EAAL,kBAAuBI,EAAvB,4BAAmDL,GAClE,EAEYO,EAAiB,SAACF,GAC3B,OAAOF,MAAK,UAAKF,EAAL,kBAAuBI,EAAvB,4BAAmDL,GAClE,EAEYQ,EAAiB,SAACC,GAC3B,OAAON,MAAK,UAAKF,EAAL,iCAAsCD,EAAtC,kBAAmDS,GAClE,C,4EClBYC,EAAc,SAAC,GAAuB,IAAD,EAApBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACnC,OACE,SAAC,IAAD,WACE,gBACEC,IAAG,UAAE,kCAAoCD,SAAtC,QAAgD,GACnDE,IAAKH,EACLI,MAAM,QACNC,OAAO,UAId,C,+ICXYC,EAAY,WAEvB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAqBC,GAArB,WACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAgBA,OACE,kBAAMC,SAfS,SAAAC,GACfA,EAAMC,iBAEDJ,GACHK,MAAM,2NAERP,EAA2B,KAAXE,EAAgB,CAAEZ,MAAOY,GAAW,CAAC,GACrDC,EAAU,GACX,EAOC,WACE,kBAAOK,KAAK,OAAOC,SANN,SAAAJ,GACfF,EAAUE,EAAMK,OAAOC,MACxB,EAI0CA,MAAOT,KAC9C,mBAAQM,KAAK,SAAb,sBAGL,ECOD,EA5Be,WAAO,IAAD,EACbI,GAAWC,EAAAA,EAAAA,MACjB,GAA4BZ,EAAAA,EAAAA,UAAS,IAArC,eAAOa,EAAP,KAAeC,EAAf,KAEA,GAAwChB,EAAAA,EAAAA,MAAxC,eAAOiB,EAAP,KACM1B,GADN,KACW,UAAG0B,EAAaC,IAAI,gBAApB,QAAgC,IAY3C,OAVAC,EAAAA,EAAAA,YAAU,WACH5B,IAGLD,EAAAA,EAAAA,IAAeC,GACZ6B,MAAK,SAAAC,GAAM,OAAIA,EAAOC,MAAX,IACXF,MAAK,SAAAG,GAAI,OAAIP,EAAUO,EAAKC,QAAnB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACnC,KAGF,4BACE,SAACQ,EAAD,IACC8B,QAAO,OAACd,QAAD,IAACA,OAAD,EAACA,EAAQe,SAAWf,EAAOgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIvC,EAAP,EAAOA,MAAOwC,EAAd,EAAcA,YAAd,OACrC,SAAC,IAAD,CAAOC,GAAE,kBAAaF,GAAeG,MAAO,CAAEC,KAAMvB,GAApD,UACE,SAAC,IAAD,CAAapB,MAAOA,EAAOC,OAAQuC,EAAaD,GAAIA,KADrBA,EADI,MAO5C,C","sources":["ApiMovies.jsx","components/PopularFilm.jsx","components/SearchBar.jsx","components/webPage/Film.jsx"],"sourcesContent":["const KEY = 'ac9cb1355cb7bf1b65c12a841cabe9f3'\nconst BASE_URL= 'https://api.themoviedb.org/3'\n\nexport const fetchPopularFilm = () => {\n  return fetch (`${BASE_URL}/trending/movie/day?api_key=${KEY}`) \n} \n\nexport const fetchFilmId = (movie_id) => {\n return fetch ( `${BASE_URL}/movie/${movie_id}?api_key=${KEY}`)\n}\n\nexport const fetchInformFilm = (movie_id) => {\n    return fetch( `${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}`)\n}\n\nexport const fetchActorFilm = (movie_id) => {\n    return fetch (`${BASE_URL}/movie/${movie_id}/reviews?api_key=${KEY}`)\n}\n\nexport const fetchViewsFilm = (query) => {\n    return fetch (`${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`)\n}","import propTypes from 'prop-types';\nimport { Box } from './All.styled';\n\nexport const Popularfilm = ({ title, imgSrc }) => {\n  return (\n    <Box>\n      <img\n        src={'https://image.tmdb.org/t/p/w300' + imgSrc ?? ''}\n        alt={title}\n        width=\"250px\"\n        height=\"auto\"\n      />\n    </Box>\n  );\n};\n\nPopularfilm.propTypes = {\n  title: propTypes.string,\n  imgSrc: propTypes.string,\n};\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const SearchBar = () => {\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [search, setSearch] = useState('');\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (!search) {\n      alert('Введите какой фильм вы хотите посмотреть');\n    }\n    setSearchParams(search !== '' ? { query: search } : {});\n    setSearch('');\n  };\n\n  const onChange = event => {\n    setSearch(event.target.value);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input type=\"text\" onChange={onChange} value={search} />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchViewsFilm } from 'ApiMovies';\nimport { Popularfilm } from 'components/PopularFilm';\nimport { Links } from 'components/All.styled';\nimport { SearchBar } from 'components/SearchBar';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    fetchViewsFilm(query)\n      .then(result => result.json())\n      .then(data => setMovies(data.results))\n      .catch(error => console.log(error));\n  }, [query]);\n\n  return (\n    <div>\n      <SearchBar />\n      {Boolean(movies?.length) && movies.map(({ id, title, poster_path }) => (\n        <Links to={`/movies/${id}`} key={id} state={{ from: location }}>\n          <Popularfilm title={title} imgSrc={poster_path} id={id} />\n        </Links>\n      ))}\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["KEY","BASE_URL","fetchPopularFilm","fetch","fetchFilmId","movie_id","fetchInformFilm","fetchActorFilm","fetchViewsFilm","query","Popularfilm","title","imgSrc","src","alt","width","height","SearchBar","useSearchParams","setSearchParams","useState","search","setSearch","onSubmit","event","preventDefault","alert","type","onChange","target","value","location","useLocation","movies","setMovies","searchParams","get","useEffect","then","result","json","data","results","catch","error","console","log","Boolean","length","map","id","poster_path","to","state","from"],"sourceRoot":""}