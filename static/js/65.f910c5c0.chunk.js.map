{"version":3,"file":"static/js/65.f910c5c0.chunk.js","mappings":"sQAAA,IAAMA,EAAM,mCACNC,EAAU,+BAEHC,EAAmB,WAC9B,OAAOC,MAAK,UAAKF,EAAL,uCAA4CD,GACzD,EAEYI,EAAc,SAACC,GAC3B,OAAOF,MAAK,UAAMF,EAAN,kBAAwBI,EAAxB,oBAA4CL,GACxD,EAEYM,EAAkB,SAACD,GAC5B,OAAOF,MAAM,GAAD,OAAKF,EAAL,kBAAuBI,EAAvB,4BAAmDL,GAClE,EAEYO,EAAiB,SAACF,GAC3B,OAAOF,MAAK,UAAKF,EAAL,kBAAuBI,EAAvB,4BAAmDL,GAClE,EAEYQ,EAAiB,SAACC,GAC3B,OAAON,MAAK,UAAKF,EAAL,iCAAsCD,EAAtC,kBAAmDS,GAClE,C,4HClBYC,EAAa,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QACvC,OACI,2BACI,gBACAC,IAAKH,EAAO,kCAAoCA,EAAOI,EACvDC,IAAKJ,EACLK,MAAM,KACNC,OAAO,UAEP,uBAAIN,KACJ,uBAAIC,MAGf,ECkBD,EA7BgB,WACd,OAA8BM,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACOC,GAAYC,EAAAA,EAAAA,MAAZD,QASP,OAPAE,EAAAA,EAAAA,YAAU,YACRjB,EAAAA,EAAAA,IAAee,GACZG,MAAK,SAAAC,GAAM,OAAIA,EAAOC,MAAX,IACXF,MAAK,SAAAG,GAAI,OAAIP,EAAYO,EAAKC,QAArB,GAEb,GAAE,CAACP,KAGA,0BACA,wBACGF,EAAQU,KAAI,YAA2C,IAAxCC,EAAuC,EAAvCA,GAAInB,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,QAASmB,EAAkB,EAAlBA,YACjC,OACE,SAACtB,EAAD,CAEEC,KAAMqB,EACNpB,OAAQA,EACRC,QAASA,GAHJkB,EAMV,OAKV,C","sources":["ApiMovies.jsx","components/ReviewItem.jsx","components/webPage/Reviews.jsx"],"sourcesContent":["const KEY = 'ac9cb1355cb7bf1b65c12a841cabe9f3'\nconst BASE_URL= 'https://api.themoviedb.org/3'\n\nexport const fetchPopularFilm = () => {\n  return fetch (`${BASE_URL}/trending/movie/day?api_key=${KEY}`) \n} \n\nexport const fetchFilmId = (movie_id) => {\n return fetch ( `${BASE_URL}/movie/${movie_id}?api_key=${KEY}`)\n}\n\nexport const fetchInformFilm = (movie_id) => {\n    return fetch( `${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}`)\n}\n\nexport const fetchActorFilm = (movie_id) => {\n    return fetch (`${BASE_URL}/movie/${movie_id}/reviews?api_key=${KEY}`)\n}\n\nexport const fetchViewsFilm = (query) => {\n    return fetch (`${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`)\n}","import propTypes from 'prop-types'\nimport img from './picture/img.jpg'\n\nexport const ReviewItem = ({ path, author, content}) => {\n    return(\n        <li>\n            <img\n            src={path ? 'https://image.tmdb.org/t/p/w200' + path : img}\n            alt={author}\n            width=\"50\"\n            height=\"auto\"\n            />\n            <p>{author}</p>\n            <p>{content}</p>\n        </li>\n    )\n}\n\nReviewItem.propTypes = {\n    path: propTypes.string,\n    author: propTypes.string,\n    content: propTypes.string,\n  };","import { fetchActorFilm } from 'ApiMovies';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewItem } from 'components/ReviewItem';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const {movieId}  = useParams();\n\n  useEffect(() => {\n    fetchActorFilm(movieId)\n      .then(result => result.json())\n      .then(data => setReviews( data.results));\n     \n  }, [movieId]);\n\n  return (\n      <div>\n      <ul>\n        {reviews.map(({ id, author, content, avatar_path }) => {\n            return (\n              <ReviewItem\n                key={id}\n                path={avatar_path}\n                author={author}\n                content={content}\n              />\n            );\n          })\n          }\n      </ul>\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["KEY","BASE_URL","fetchPopularFilm","fetch","fetchFilmId","movie_id","fetchInformFilm","fetchActorFilm","fetchViewsFilm","query","ReviewItem","path","author","content","src","img","alt","width","height","useState","reviews","setReviews","movieId","useParams","useEffect","then","result","json","data","results","map","id","avatar_path"],"sourceRoot":""}